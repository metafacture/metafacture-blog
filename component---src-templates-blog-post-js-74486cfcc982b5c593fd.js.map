{"version":3,"file":"component---src-templates-blog-post-js-74486cfcc982b5c593fd.js","mappings":"sLAiFA,UA1EyBA,IAAyB,IAADC,EAAAC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUJ,EAC1C,MAAMK,EAAOF,EAAKG,eACZC,GAAkC,QAAtBN,EAAAE,EAAKK,KAAKC,oBAAY,IAAAR,OAAA,EAAtBA,EAAwBS,QAAK,SACzC,SAAEC,EAAQ,KAAEC,GAAST,EAE3B,OACEU,EAAAA,cAACC,EAAAA,EAAM,CAACV,SAAUA,EAAUM,MAAOH,GACjCM,EAAAA,cAACE,EAAAA,EAAG,CACFL,MAAOL,EAAKW,YAAYN,MACxBO,YAAaZ,EAAKW,YAAYC,aAAeZ,EAAKa,UAEpDL,EAAAA,cAAA,WACEM,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETR,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIS,SAAS,YAAYjB,EAAKW,YAAYN,OAC1CG,EAAAA,cAAA,SACGR,EAAKW,YAAYO,MACD,QAAhBrB,EAAAG,EAAKW,mBAAW,IAAAd,OAAA,EAAhBA,EAAkBsB,UACXX,EAAAA,cAAA,kBAEGR,EAAKW,YAAYQ,QAAQC,KAAI,CAACC,EAAQC,IAEnCd,EAAAA,cAAA,QAAMe,IAAK,SAAWD,GACnBD,EAAOG,UAAS,IAEhBH,EAAOI,SACPH,EAAQtB,EAAKW,YAAYQ,QAAQO,OAAS,EAAI,KAAY,SAM/ElB,EAAAA,cAAA,WACEmB,wBAAyB,CAAEC,OAAQ5B,EAAK6B,MACxCZ,SAAS,gBAEXT,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACsB,EAAAA,EAAG,QAGRtB,EAAAA,cAAA,OAAKM,UAAU,iBACbN,EAAAA,cAAA,MACEuB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX5B,EAAAA,cAAA,UACGF,GACCE,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAIhC,EAASiC,OAAOC,KAAMC,IAAI,QAAO,KACtCnC,EAASK,YAAYN,QAI9BG,EAAAA,cAAA,UACGD,GACCC,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAI/B,EAAKgC,OAAOC,KAAMC,IAAI,QAC7BlC,EAAKI,YAAYN,MAAM,SAM3B,C","sources":["webpack://metafacture-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>\n            {post.frontmatter.date}\n            {post.frontmatter?.authors && (\n                    <span>\n                      {` | `}\n                      {post.frontmatter.authors.map((author, index) => {\n                        return(\n                          <span key={\"author\" + index}>\n                            {author.firstname}\n                            {` `}\n                            {author.lastname}\n                            {index < post.frontmatter.authors.length - 1 ? ',\\u00A0' : ''}\n                          </span>\n                        )})}\n                    </span>)}\n          </p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        authors { \n          lastname\n          firstname\n         }\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","_data$site$siteMetada","_post$frontmatter","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","React","Layout","SEO","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","authors","map","author","index","key","firstname","lastname","length","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}