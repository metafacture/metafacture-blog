{"version":3,"file":"component---src-pages-index-js-4ecf8c38635702fce09a.js","mappings":"sLAmFA,UA5EkBA,IAAyB,IAADC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUH,EACnC,MAAMI,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,QAAK,QACzCC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENC,EAAAA,cAACC,EAAAA,EAAM,CAACV,SAAUA,EAAUI,MAAOH,GACjCQ,EAAAA,cAACE,EAAAA,EAAG,CAACP,MAAM,cACXK,EAAAA,cAACG,EAAAA,EAAG,MACJH,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACC,EAAAA,EAAM,CAACV,SAAUA,EAAUI,MAAOH,GACjCQ,EAAAA,cAACE,EAAAA,EAAG,CAACP,MAAM,cACXK,EAAAA,cAACG,EAAAA,EAAG,MACJH,EAAAA,cAAA,MAAII,MAAO,CAAEC,UAAU,SACpBT,EAAMU,KAAIC,IAAS,IAADC,EACjB,MAAMb,EAAQY,EAAKE,YAAYd,OAASY,EAAKG,OAAOC,KAEpD,OACEX,EAAAA,cAAA,MAAIY,IAAKL,EAAKG,OAAOC,MACnBX,EAAAA,cAAA,WACEa,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETf,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAIV,EAAKG,OAAOC,KAAMO,SAAS,OACnClB,EAAAA,cAAA,QAAMkB,SAAS,YAAYvB,KAG/BK,EAAAA,cAAA,aAAQO,EAAKE,YAAYU,OACR,QAAhBX,EAAAD,EAAKE,mBAAW,IAAAD,OAAA,EAAhBA,EAAkBY,UACjBpB,EAAAA,cAAA,iBACO,IAEL,IACCO,EAAKE,YAAYW,QAAQd,KAAI,CAACe,EAAQC,IAEnCtB,EAAAA,cAAA,QAAMY,IAAK,SAAWU,GACnBD,EAAOE,UAAS,IAEhBF,EAAOG,SACPF,EAAQf,EAAKE,YAAYW,QAAQrB,OAAS,EAAI,KAAY,QAQvEC,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEyB,wBAAyB,CACvBC,OAAQnB,EAAKE,YAAYkB,aAAepB,EAAKqB,SAE/CV,SAAS,kBAIZ,KAIJ,C","sources":["webpack://metafacture-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                  {post.frontmatter?.authors && (\n                    <small>\n                      {` `}\n                      |\n                      {` `} \n                      {post.frontmatter.authors.map((author, index) => {\n                        return(\n                          <span key={\"author\" + index}>\n                            {author.firstname}\n                            {` `}\n                            {author.lastname}\n                            {index < post.frontmatter.authors.length - 1 ? ',\\u00A0' : ''}\n                          </span>\n                        )\n                      })}\n                    </small>\n                  )\n                }\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`{\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n    nodes {\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        authors {\n          lastname\n          firstname\n        }\n      }\n    }\n  }\n}`\n"],"names":["_ref","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","React","Layout","SEO","Bio","style","listStyle","map","post","_post$frontmatter","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","authors","author","index","firstname","lastname","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}